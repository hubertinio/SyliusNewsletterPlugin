<script>
document.addEventListener("DOMContentLoaded", function () {
    const currentLocale = "{{ app.request.locale }}";
    console.log("Current Locale:", currentLocale);

    const translations = {
        invalid_email: "{{ 'dotit_sylius_newsletter_plugin.message.invalid_email'|trans|e('js') }}",
        error_occured: "{{ 'dotit_sylius_newsletter_plugin.message.error_occured'|trans|e('js') }}"
    };

    const form = document.querySelector(".dotit-newsletter-form");

    if (!form) {
        return;
    }

    form.addEventListener("submit", async function (event) {
        event.preventDefault();

        const emailInput = form.querySelector('input[name="email"]');
        const messageDiv = form.querySelector(".form-message");

        if (!emailInput) {
            console.error("There is no email field.");
            return;
        }

        const email = emailInput.value.trim();

        if (!email) {
            messageDiv.textContent = translations.invalid_email;
            messageDiv.classList.remove("d-none");
            messageDiv.classList.add("text-danger");
            return;
        }

        try {
            const response = await fetch(form.action, {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                },

                body: JSON.stringify({
                    email: email,
                    locale: currentLocale
                }),
            });

            const data = await response.json();

            if (response.ok) {
                messageDiv.textContent = data.message || response.message;
                messageDiv.classList.remove("d-none", "text-danger");
                messageDiv.classList.add("text-success");
                form.reset();
            } else {
                messageDiv.textContent = data.message || data["hydra:description"] || translations.error_occured;
                messageDiv.classList.remove("d-none", "text-success");
                messageDiv.classList.add("text-danger");
            }
        } catch (error) {
            messageDiv.textContent = data.message || translations.error_occured;
            messageDiv.classList.remove("d-none", "text-success");
            messageDiv.classList.add("text-danger");
        }
    });
});
</script>
